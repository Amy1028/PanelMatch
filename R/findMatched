
findMatched <- function(L, unit.id, time.id, treatment, data){
  # a list of lists to contain matched matrix for each treated observation
  master_list <- list()
  # a function to delete NULLs from a list
  delete.NULLs  <-  function(x.list){   # delele null/empty entries in a list
    x.list[unlist(lapply(x.list, length) != 0)]
  }
  
  # load the dataframe that the user specifies
  data <- na.omit(data[c(unit.id, time.id, treatment)]) # omit NAs 
  colnames(data) <- c("unit.id", "time.id", "treatment") # rename variables to match with the object names in the loop below
  data <- data[order(data$unit.id, data$time.id),] # order by unit and time. This is important as the loop below works with 
                                                    # this order
  
  # the loop
  for (i in (L+1):nrow(data)){ # the loop begins with L+1
  
  # if the observation is treated and the unit.id associated with it is the same one associated with L observations ago
    if (data$treatment[i] == 1 & data$unit.id[i] == data$unit.id[i-L]) {
      pre.treated.values <- rep(NA, L) # empty vector of length L
     
      # get the L treatment values before the timing of treatment
      for (j in 1:L) {
        pre.treated.values[j] <- data$treatment[i-j]
      }
      pre.treated.values <- rev(pre.treated.values) # reverse the order to avoid mistakes later
      treated.time <- data$time[i] # get the timing of treatment
      treated.unit <- data$unit.id[i] # get the unit.id of that treated observation
     
      # get a dataset of L rows with only that treated unit along with its treatment history of length L and treatment timing
      treated.data <- data[data$time <= treated.time & data$time >= treated.time - L & data$unit.id == treated.unit, ]
     
      # same idea, but this time we get all the other units that share the same years 
      subd <- data[data$time <= treated.time & data$time >= treated.time - L & data$unit.id != treated.unit, ]
      id <- unique(subd$unit.id) # all IDs of these other units 
      result_list <- list() # create a list to store data where units share the same treatment history with the treated obs
     
      for (k in 1:length(id)) { # for each ID
      # if the treatment values of that ID's subset (that contains only data with that ID for those same years (L + 1 years))
      # completely match with a vector containing the treated observation's pre.treated.values and 0
      
        if (isTRUE(all.equal(subd[subd$unit.id == id[k], ]$treatment, c(pre.treated.values,0)))) {
          result_list[[k]] <- rbind(subd[subd$unit.id == id[k], ], treated.data) # save that subset plus the treated.data
                                                                                 # into the result_list
        } else {
          result_list[[k]] <- NULL # if not then NULL
        }
      } 
      master_list[[i]] <- delete.NULLs(result_list) # save the entire result_list to the master_list, indexed by i
                                                    # here I use function "delete.NULLs" to delete all the empty elements
                                                    # in the result_list
    } else {
      next
    }
  }
  
  newlist <- delete.NULLs(master_list) # delete all the empty result_lists in the master_list
  return(newlist)
  
  
  
}
