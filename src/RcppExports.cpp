// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// sumCpp
int sumCpp(Rcpp::NumericVector x);
RcppExport SEXP _PanelMatch_sumCpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sumCpp(x));
    return rcpp_result_gen;
END_RCPP
}
// FindMatches
NumericMatrix FindMatches(IntegerVector unitIdx, IntegerVector timeIdx, IntegerVector treat);
RcppExport SEXP _PanelMatch_FindMatches(SEXP unitIdxSEXP, SEXP timeIdxSEXP, SEXP treatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type unitIdx(unitIdxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type timeIdx(timeIdxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type treat(treatSEXP);
    rcpp_result_gen = Rcpp::wrap(FindMatches(unitIdx, timeIdx, treat));
    return rcpp_result_gen;
END_RCPP
}
// all_sug
bool all_sug(LogicalVector x);
RcppExport SEXP _PanelMatch_all_sug(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(all_sug(x));
    return rcpp_result_gen;
END_RCPP
}
// rbind_c
NumericMatrix rbind_c(NumericMatrix x, NumericMatrix y);
RcppExport SEXP _PanelMatch_rbind_c(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rbind_c(x, y));
    return rcpp_result_gen;
END_RCPP
}
// findDDmatched2
List findDDmatched2(int L, int F, NumericMatrix x1);
RcppExport SEXP _PanelMatch_findDDmatched2(SEXP LSEXP, SEXP FSEXP, SEXP x1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type F(FSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x1(x1SEXP);
    rcpp_result_gen = Rcpp::wrap(findDDmatched2(L, F, x1));
    return rcpp_result_gen;
END_RCPP
}
// findDDNaive
List findDDNaive(int L, int F, NumericMatrix x1);
RcppExport SEXP _PanelMatch_findDDNaive(SEXP LSEXP, SEXP FSEXP, SEXP x1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type F(FSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x1(x1SEXP);
    rcpp_result_gen = Rcpp::wrap(findDDNaive(L, F, x1));
    return rcpp_result_gen;
END_RCPP
}
// findDDrestricted
List findDDrestricted(int L, int F, NumericMatrix x1);
RcppExport SEXP _PanelMatch_findDDrestricted(SEXP LSEXP, SEXP FSEXP, SEXP x1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type F(FSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x1(x1SEXP);
    rcpp_result_gen = Rcpp::wrap(findDDrestricted(L, F, x1));
    return rcpp_result_gen;
END_RCPP
}
// findDDM2stripped
List findDDM2stripped(int L, int F, NumericMatrix x1);
RcppExport SEXP _PanelMatch_findDDM2stripped(SEXP LSEXP, SEXP FSEXP, SEXP x1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type F(FSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x1(x1SEXP);
    rcpp_result_gen = Rcpp::wrap(findDDM2stripped(L, F, x1));
    return rcpp_result_gen;
END_RCPP
}
// get_treated_indices
Rcpp::LogicalVector get_treated_indices(const Rcpp::NumericMatrix& ordered_df, const Rcpp::NumericVector& treated_indices, int treat_col_idx, int unit_var_col);
RcppExport SEXP _PanelMatch_get_treated_indices(SEXP ordered_dfSEXP, SEXP treated_indicesSEXP, SEXP treat_col_idxSEXP, SEXP unit_var_colSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type ordered_df(ordered_dfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type treated_indices(treated_indicesSEXP);
    Rcpp::traits::input_parameter< int >::type treat_col_idx(treat_col_idxSEXP);
    Rcpp::traits::input_parameter< int >::type unit_var_col(unit_var_colSEXP);
    rcpp_result_gen = Rcpp::wrap(get_treated_indices(ordered_df, treated_indices, treat_col_idx, unit_var_col));
    return rcpp_result_gen;
END_RCPP
}
// get_comparison_histories
Rcpp::List get_comparison_histories(const Rcpp::NumericMatrix& compmat, const Rcpp::NumericVector& ts, const Rcpp::NumericVector& ids, int t_col, int id_col, int L, int treat_col);
RcppExport SEXP _PanelMatch_get_comparison_histories(SEXP compmatSEXP, SEXP tsSEXP, SEXP idsSEXP, SEXP t_colSEXP, SEXP id_colSEXP, SEXP LSEXP, SEXP treat_colSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type compmat(compmatSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type ts(tsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type ids(idsSEXP);
    Rcpp::traits::input_parameter< int >::type t_col(t_colSEXP);
    Rcpp::traits::input_parameter< int >::type id_col(id_colSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type treat_col(treat_colSEXP);
    rcpp_result_gen = Rcpp::wrap(get_comparison_histories(compmat, ts, ids, t_col, id_col, L, treat_col));
    return rcpp_result_gen;
END_RCPP
}
// get_msets_helper
Rcpp:: List get_msets_helper(const Rcpp::List& control_history_list, const Rcpp::NumericMatrix& widemat, const Rcpp::NumericVector& t_as_col_nums, const Rcpp::NumericVector& ids, int L);
RcppExport SEXP _PanelMatch_get_msets_helper(SEXP control_history_listSEXP, SEXP widematSEXP, SEXP t_as_col_numsSEXP, SEXP idsSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type control_history_list(control_history_listSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type widemat(widematSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type t_as_col_nums(t_as_col_numsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type ids(idsSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(get_msets_helper(control_history_list, widemat, t_as_col_nums, ids, L));
    return rcpp_result_gen;
END_RCPP
}
// get_vit_index
Rcpp::NumericVector get_vit_index(Rcpp::CharacterVector t_id_key, Rcpp::CharacterVector control_treatment_t_ids, Rcpp::NumericVector control_treatment_set_nums);
RcppExport SEXP _PanelMatch_get_vit_index(SEXP t_id_keySEXP, SEXP control_treatment_t_idsSEXP, SEXP control_treatment_set_numsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type t_id_key(t_id_keySEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type control_treatment_t_ids(control_treatment_t_idsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type control_treatment_set_nums(control_treatment_set_numsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_vit_index(t_id_key, control_treatment_t_ids, control_treatment_set_nums));
    return rcpp_result_gen;
END_RCPP
}
// get_dits
Rcpp::NumericVector get_dits(Rcpp::CharacterVector t_id_key, Rcpp::CharacterVector nonempty_t_ids);
RcppExport SEXP _PanelMatch_get_dits(SEXP t_id_keySEXP, SEXP nonempty_t_idsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type t_id_key(t_id_keySEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type nonempty_t_ids(nonempty_t_idsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_dits(t_id_key, nonempty_t_ids));
    return rcpp_result_gen;
END_RCPP
}
// prep_lead_years
Rcpp::List prep_lead_years(Rcpp::NumericVector ts, Rcpp::NumericVector lead_window);
RcppExport SEXP _PanelMatch_prep_lead_years(SEXP tsSEXP, SEXP lead_windowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ts(tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lead_window(lead_windowSEXP);
    rcpp_result_gen = Rcpp::wrap(prep_lead_years(ts, lead_window));
    return rcpp_result_gen;
END_RCPP
}
// sumwits
Rcpp::NumericVector sumwits(int nrow, Rcpp::NumericVector vit_vect);
RcppExport SEXP _PanelMatch_sumwits(SEXP nrowSEXP, SEXP vit_vectSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vit_vect(vit_vectSEXP);
    rcpp_result_gen = Rcpp::wrap(sumwits(nrow, vit_vect));
    return rcpp_result_gen;
END_RCPP
}
// re_norm_index
Rcpp::List re_norm_index(Rcpp::NumericMatrix compmat, Rcpp::NumericVector compmat_row_units, Rcpp::NumericVector compmat_cols, int lead, Rcpp::List sets, Rcpp::NumericVector control_start_years);
RcppExport SEXP _PanelMatch_re_norm_index(SEXP compmatSEXP, SEXP compmat_row_unitsSEXP, SEXP compmat_colsSEXP, SEXP leadSEXP, SEXP setsSEXP, SEXP control_start_yearsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type compmat(compmatSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type compmat_row_units(compmat_row_unitsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type compmat_cols(compmat_colsSEXP);
    Rcpp::traits::input_parameter< int >::type lead(leadSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type sets(setsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type control_start_years(control_start_yearsSEXP);
    rcpp_result_gen = Rcpp::wrap(re_norm_index(compmat, compmat_row_units, compmat_cols, lead, sets, control_start_years));
    return rcpp_result_gen;
END_RCPP
}
// check_treated_units
Rcpp::LogicalVector check_treated_units(Rcpp::NumericMatrix compmat, Rcpp::NumericVector compmat_row_units, Rcpp::NumericVector compmat_cols, int lead, Rcpp::NumericVector treated_ids, Rcpp::NumericVector treated_ts);
RcppExport SEXP _PanelMatch_check_treated_units(SEXP compmatSEXP, SEXP compmat_row_unitsSEXP, SEXP compmat_colsSEXP, SEXP leadSEXP, SEXP treated_idsSEXP, SEXP treated_tsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type compmat(compmatSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type compmat_row_units(compmat_row_unitsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type compmat_cols(compmat_colsSEXP);
    Rcpp::traits::input_parameter< int >::type lead(leadSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type treated_ids(treated_idsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type treated_ts(treated_tsSEXP);
    rcpp_result_gen = Rcpp::wrap(check_treated_units(compmat, compmat_row_units, compmat_cols, lead, treated_ids, treated_ts));
    return rcpp_result_gen;
END_RCPP
}
// needs_renormalization
Rcpp::LogicalVector needs_renormalization(Rcpp::List set_index_list);
RcppExport SEXP _PanelMatch_needs_renormalization(SEXP set_index_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type set_index_list(set_index_listSEXP);
    rcpp_result_gen = Rcpp::wrap(needs_renormalization(set_index_list));
    return rcpp_result_gen;
END_RCPP
}
// renormalize
Rcpp::List renormalize(Rcpp::List control_index, Rcpp::List sets_to_be_updated);
RcppExport SEXP _PanelMatch_renormalize(SEXP control_indexSEXP, SEXP sets_to_be_updatedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type control_index(control_indexSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type sets_to_be_updated(sets_to_be_updatedSEXP);
    rcpp_result_gen = Rcpp::wrap(renormalize(control_index, sets_to_be_updated));
    return rcpp_result_gen;
END_RCPP
}
// equality_four_cpp
Rcpp::NumericVector equality_four_cpp(Rcpp::NumericMatrix Wit_vals, Rcpp::NumericVector y, Rcpp::NumericVector z);
RcppExport SEXP _PanelMatch_equality_four_cpp(SEXP Wit_valsSEXP, SEXP ySEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Wit_vals(Wit_valsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(equality_four_cpp(Wit_vals, y, z));
    return rcpp_result_gen;
END_RCPP
}
// create_dmats_for_distance
List create_dmats_for_distance(NumericMatrix expanded_data, NumericVector treated_ids, NumericVector treated_ts, CharacterVector row_key, List matched_sets);
RcppExport SEXP _PanelMatch_create_dmats_for_distance(SEXP expanded_dataSEXP, SEXP treated_idsSEXP, SEXP treated_tsSEXP, SEXP row_keySEXP, SEXP matched_setsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type expanded_data(expanded_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type treated_ids(treated_idsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type treated_ts(treated_tsSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type row_key(row_keySEXP);
    Rcpp::traits::input_parameter< List >::type matched_sets(matched_setsSEXP);
    rcpp_result_gen = Rcpp::wrap(create_dmats_for_distance(expanded_data, treated_ids, treated_ts, row_key, matched_sets));
    return rcpp_result_gen;
END_RCPP
}
